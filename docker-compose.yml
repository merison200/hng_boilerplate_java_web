version: "3"

services:
  backend:
    build: .
    ports:
      - "8080:8080"
    environment:
      - spring.datasource.url=jdbc:postgresql://postgresdb:5432/app
      - spring.datasource.username=postgres
      - spring.datasource.password=postgres
      - spring.datasource.driver-class-name=org.postgresql.Driver
      #- spring.flyway.enabled=false
      - spring.flyway.enabled=true
      - spring.flyway.locations=classpath:db/migration
      - spring.flyway.user=postgres
      - spring.flyway.password=postgres
    networks:
      - backend-net
    depends_on:
      postgresdb:
        condition: service_healthy
    restart: unless-stopped

  postgresdb:
    image: postgres
    container_name: postgresdb
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=app
    volumes:
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
      - postgresdataa:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend-net

  flyway:
    image: flyway/flyway:latest
    command: -url=jdbc:postgresql://postgresdb:5432/app -user=postgres -password=postgres migrate
    volumes:
      - ./src/main/resources/db/migration:/flyway/sql
    depends_on:
      postgresdb:
        condition: service_healthy
    networks:
      - backend-net

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - backend-net
    depends_on:
      - backend
    restart: unless-stopped

networks:
  backend-net:
    driver: bridge
    
volumes:
    postgresdataa:
